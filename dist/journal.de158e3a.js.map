{"mappings":"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","sources":["src/main.js"],"sourcesContent":["const API_KEY = \"ae9417b72a04e975455b2ed2ac2a7001\";\nconst BASE_URL = \"https://api.themoviedb.org/3\";\nconst IMAGE_BASE = \"https://image.tmdb.org/t/p/original\";\n\n// Add these missing variables\nlet allMovies = [];\nlet selectedGenres = new Set();\n\nasync function fetchGenres() {\n  const res = await fetch(`${BASE_URL}/genre/movie/list?api_key=${API_KEY}&language=en-US`);\n  const data = await res.json();\n  console.log(data.genres)\n  return data.genres;\n}\n\nasync function fetchPopularMovies() {\n  try {\n    const response = await fetch(`${BASE_URL}/movie/popular?api_key=${API_KEY}&language=en-US&page=1`);\n    const data = await response.json();\n    allMovies = data.results;  \n    displayMovies(allMovies);\n  } catch (error) {\n    console.error(\"Error fetching popular movies:\", error);\n  }\n}\n\nasync function loadModal() {\n  const res = await fetch('components/popup.html')\n\n  const notificationHTML = await (await fetch('components/notification.html')).text()\n  const modalHTML = await res.text();\n\n  document.body.insertAdjacentHTML('beforeend', modalHTML);\n  document.body.insertAdjacentHTML('beforeend', notificationHTML);\n\n  function closeModal () {\n    const modal = document.getElementById(\"movieModal\"); \n    document.getElementById(\"movieModal\").classList.remove(\"opacity-100\", \"scale-100\", \"pointer-events-auto\");\n    document.getElementById(\"movieModal\").classList.add(\"opacity-0\", \"scale-95\", \"pointer-events-none\");\n   \n  setTimeout(() => {\n    document.getElementById(\"movieModal\").classList.add(\"hidden\")\n  }, 300)\n  }\n  \n  document.getElementById(\"closeModal\").addEventListener(\"click\", closeModal)\n\n  document.getElementById(\"addToFavorite\").addEventListener(\"click\", () => {\n    console.log(`added  to favorites`)\n    closeModal()\n\n  setTimeout(()=> {\n    const container = document.getElementById(\"notificationModal\")\n    const text = document.getElementById(\"modalText\")\n    text.textContent = \"Added to Favorites\"\n    \n    container.classList.remove(\"hidden\", \"opacity-0\", \"scale-95\")\n    container.classList.add(\"opacity-100\", \"scale-100\")\n   \n    setTimeout(() => {\n      container.classList.add(\"hidden\", \"opacity-0\", \"scale-95\")\n      container.classList.remove(\"opacity-100\", \"scale-100\")\n      text.textContent = \"\"}\n     , 1000 )\n  }, 1000)\n  });\n}\n\n// Run on page load--------------------------\nloadModal()\nfetchPopularMovies()\nfetchGenres()\n\n//Movie card-------------------------------------------------------\n\nfunction handleClick(movie) {\n    const modal = document.getElementById(\"movieModal\")\n    const title = document.getElementById(\"modalTitle\")\n    const description = document.getElementById(\"modalDescription\")\n    const image = document.getElementById(\"modalImage\")\n   const rating = document.getElementById(\"modalRating\")\n     const release = document.getElementById(\"modalRelease\")\n\n    title.textContent = movie.title\n    description.textContent = movie.overview\n    rating.textContent = \"Rating: \" +  movie.vote_average\n    release.textContent = \"Release Date: \" + movie.release_date\n\n    const imagePath = movie.backdrop_path || movie.poster_path || ''\n    if (imagePath) {\n        image.style.backgroundImage = `url(${IMAGE_BASE + imagePath})`\n    } else {\n        image.style.backgroundImage = ''\n    }\n\n  modal.classList.remove(\"hidden\")\n  modal.classList.add(\"opacity-0\", \"scale-95\", \"pointer-events-none\")\n  modal.classList.remove(\"opacity-100\", \"scale-100\", \"pointer-events-auto\")\n\n  requestAnimationFrame(() => {\n    modal.classList.remove(\"opacity-0\", \"scale-95\", \"pointer-events-none\")\n    modal.classList.add(\"opacity-100\", \"scale-100\", \"pointer-events-auto\")\n  })\n}\n\nasync function displayGenreFilters() {\n  const genres = await fetchGenres();\n  const filterContainer = document.getElementById(\"genreFilters\");\n\n  console.log(\"displayGenre Filter\")\n  genres.forEach((genre) => {\n    const pill = document.createElement(\"button\");\n    pill.textContent = genre.name;\n    pill.className = \"bg-gray-800 text-white text-sm px-4 py-2 rounded-full hover:bg-red-600 hover:shadow-xl shadow-(color: red) border-gray-400 border-[1px] transition pointer-cursor\";\n    pill.dataset.genreId = genre.id;\n\n     pill.addEventListener(\"click\", () => {\n      if (selectedGenres.has(genre.id)) {\n        selectedGenres.delete(genre.id);\n        pill.classList.remove(\"bg-red-600\");\n      } else {\n        selectedGenres.add(genre.id);\n        pill.classList.add(\"bg-red-600\");\n      }\n\n      filterMoviesByGenres();\n    });\n    filterContainer.appendChild(pill);\n  });\n}\n\nfunction filterMoviesByGenres() {\n  if (selectedGenres.size === 0) {\n    displayMovies(allMovies);\n    return;\n  }\n\n  const filtered = allMovies.filter(movie => {\n    return movie.genre_ids.some(id => selectedGenres.has(id));\n  });\n\n  displayMovies(filtered);\n}\n\n// Wait for DOM to load before setting up event listeners\ndocument.addEventListener('DOMContentLoaded', () => {\n  // Initialize genre filters after DOM is ready\n  displayGenreFilters();\n  \n  // Set up filter panel toggle\n  const openFilterBtn = document.getElementById(\"openFilter\");\n  if (openFilterBtn) {\n    openFilterBtn.addEventListener(\"click\", () => {\n      const panel = document.getElementById(\"genreFilters\");\n      panel.classList.toggle(\"hidden\");\n    });\n  }\n\n  // Set up search functionality\n  const searchInput = document.getElementById(\"searchInput\");\n  if (searchInput) {\n    searchInput.addEventListener(\"input\", (e) => {\n      const searchTerm = e.target.value.toLowerCase();\n      \n      if (searchTerm === \"\") {\n        // If search is empty, show filtered movies based on selected genres\n        filterMoviesByGenres();\n        return;\n      }\n\n      // Filter movies based on search term and selected genres\n      let moviesToSearch = allMovies;\n      \n      // First apply genre filter if any genres are selected\n      if (selectedGenres.size > 0) {\n        moviesToSearch = allMovies.filter(movie => {\n          return movie.genre_ids.some(id => selectedGenres.has(id));\n        });\n      }\n      \n      // Then apply search filter\n      const searchResults = moviesToSearch.filter(movie => {\n        return movie.title.toLowerCase().includes(searchTerm) ||\n               movie.overview.toLowerCase().includes(searchTerm);\n      });\n\n      displayMovies(searchResults);\n    });\n  }\n});\n\nfunction displayMovies(movies) {\n  const moviesContainer = document.getElementById(\"movies\");\n  moviesContainer.innerHTML = \"\";\n\n  movies.forEach((movie) => {\n    const card = document.createElement(\"div\");\n    card.className =\n      \"bg-gray-800 rounded-lg overflow-hidden shadow-md hover:shadow-xl transition-shadow duration-300\";\n\n    card.innerHTML = `\n      <div class=\"block hover:opacity-80 transition cursor-pointer\">\n        <img class=\"bg-contain\" src=\"${IMAGE_BASE + movie.poster_path}\" width=100% alt=\"${\n      movie.title\n    }\" class=\"h-80 object-cover\">\n        <div class=\"p-4\">\n          <h3 class=\"text-lg font-bold mb-2\">${movie.title}</h3>\n          <p class=\"text-sm text-gray-400\">${movie.overview.slice(\n            0,\n            90\n          )}...</p>\n          <p class=\"text-sm text-gray-400 mt-2\">Release Date: ${\n            movie.release_date\n          }</p>\n          <p class=\"text-sm text-yellow-400\">Rating: ${movie.vote_average}</p>\n        </div>\n      </div>\n    `;\n\n    card.addEventListener(\"click\", () => {\n      handleClick(movie);\n    });\n\n    moviesContainer.appendChild(card);\n  });\n}"],"names":[],"version":3,"file":"journal.de158e3a.js.map","sourceRoot":"/__parcel_source_root/"}